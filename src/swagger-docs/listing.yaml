/api/listings:
  get:
    summary: Get all listings
    tags: [Listing]
    responses:
      200:
        description: List of all listings
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Listing"
      500:
        description: Internal server error

/api/listing/{id}:
  get:
    summary: Get a specific listing by ID
    tags: [Listing]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Listing details
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/Listing"
      400:
        description: Invalid ID
      404:
        description: Listing not found
      500:
        description: Internal server error

/api/listing:
  post:
    summary: Create a new listing
    tags: [Listing]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateListing"
    responses:
      201:
        description: Listing created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/Listing"
      400:
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: Validation error
                details:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: name
                      message:
                        type: string
                        example: Required
      500:
        description: Internal server error

/api/listing/{id}:
  patch:
    summary: Update a listing by ID
    tags: [Listing]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateListing"
    responses:
      200:
        description: Listing updated successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Listing updated
                data:
                  $ref: "#/components/schemas/Listing"
      400:
        description: Validation error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                error:
                  type: string
                  example: Validation error
                details:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: name
                      message:
                        type: string
                        example: Required
      404:
        description: Listing not found
      500:
        description: Internal server error

  delete:
    summary: Delete a listing by ID
    tags: [Listing]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Listing deleted successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Listing deleted
      404:
        description: Listing not found
      500:
        description: Internal server error

/api/locations:
  get:
    summary: Get all locations
    tags: [Location]
    responses:
      200:
        description: List of all locations
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Location"
      500:
        description: Internal server error

/api/location/{id}:
  get:
    summary: Get a specific location by ID
    tags: [Location]
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 1
    responses:
      200:
        description: Location details
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/Location"
      400:
        description: Invalid ID
      404:
        description: Location not found
      500:
        description: Internal server error

/test:
  get:
    summary: Test route
    tags: [Test]
    responses:
      500:
        description: Test error

components:
  schemas:
    Listing:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Example Hotel
        description:
          type: string
          example: A luxurious hotel with great amenities.
        rating:
          type: number
          example: 4.5
        address:
          type: string
          example: 123 Main St
        city:
          type: string
          example: New York
        zip:
          type: string
          example: 10001
        phone:
          type: string
          example: +1-123-456-7890
        email:
          type: string
          example: info@examplehotel.com
        website:
          type: string
          example: https://examplehotel.com
        categoryId:
          type: integer
          example: 1

    CreateListing:
      type: object
      required:
        - name
        - description
        - address
        - city
        - zip
        - phone
        - email
        - website
        - categoryId
      properties:
        name:
          type: string
          example: Example Hotel
        description:
          type: string
          example: A luxurious hotel with great amenities.
        rating:
          type: number
          example: 4.5
        address:
          type: string
          example: 123 Main St
        city:
          type: string
          example: New York
        zip:
          type: string
          example: 10001
        phone:
          type: string
          example: +1-123-456-7890
        email:
          type: string
          example: info@examplehotel.com
        website:
          type: string
          example: https://examplehotel.com
        categoryId:
          type: integer
          example: 1

    UpdateListing:
      type: object
      properties:
        name:
          type: string
          example: Updated Hotel Name
        description:
          type: string
          example: Updated description.
        rating:
          type: number
          example: 4.7
        address:
          type: string
          example: 456 Updated St
        city:
          type: string
          example: Los Angeles
        zip:
          type: string
          example: 90001
        phone:
          type: string
          example: +1-987-654-3210
        email:
          type: string
          example: updated@examplehotel.com
        website:
          type: string
          example: https://updatedhotel.com
        categoryId:
          type: integer
          example: 2

    Location:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: New York
        description:
          type: string
          example: A bustling city with iconic landmarks.